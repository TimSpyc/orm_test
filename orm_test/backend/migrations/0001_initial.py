# Generated by Django 4.2.1 on 2023-08-17 09:01

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillOfMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('start_of_production_date', models.DateTimeField(default=None, null=True)),
                ('end_of_production_date', models.DateTimeField(default=None, null=True)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrossSectionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawing_number', models.CharField(max_length=255)),
                ('drawing_revision', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=3)),
                ('symbol', models.CharField(max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('group_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerPlantGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_name', models.CharField(max_length=255, null=True)),
                ('customer_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerivativeConstellium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('estimated_price', models.FloatField()),
                ('estimated_weight', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerivativeLmcGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lmc_full_code', models.CharField(max_length=255, unique=True)),
                ('lmc_model_code', models.CharField(max_length=255)),
            ],
            options={
                'unique_together': {('lmc_full_code', 'lmc_model_code')},
            },
        ),
        migrations.CreateModel(
            name='DerivativeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloyTreatmentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('duration', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawing_number', models.CharField(max_length=255)),
                ('drawing_revision', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartRecipientGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('customer_part_number', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('validity_start_date', models.DateTimeField(null=True)),
                ('validity_end_date', models.DateTimeField(null=True)),
                ('cbd_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldContractGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=255)),
                ('contract_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldCustomerPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_part_number_sap', models.CharField(max_length=255)),
                ('part_recipient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partrecipientgroup')),
            ],
            options={
                'unique_together': {('part_recipient', 'customer_part_number_sap')},
            },
        ),
        migrations.CreateModel(
            name='PartSoldMaterialPriceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceComponentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PredictionAccuracy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriceUploadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectStaffCostTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('psp_element', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectUserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RevisionLMC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('revision_date', models.DateField()),
            ],
            options={
                'get_latest_by': 'revision_date',
            },
        ),
        migrations.CreateModel(
            name='SapNumberGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sap_number', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SavingUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SemiFinishedProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockExchangeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2023, 8, 17, 9, 1, 27, 658182))),
                ('aluminum_cash_to_M_plus_1', models.FloatField()),
                ('aluminum_sett', models.FloatField()),
                ('aluminum_cash_bid', models.FloatField()),
                ('aluminum_cash_ask', models.FloatField()),
                ('aluminum_3_months_bid', models.FloatField()),
                ('aluminum_3_months_ask', models.FloatField()),
                ('aluminum_dec_year_1_bid', models.FloatField()),
                ('aluminum_dec_year_1_ask', models.FloatField()),
                ('aluminum_dec_year_2_bid', models.FloatField()),
                ('aluminum_dec_year_2_ask', models.FloatField()),
                ('aluminum_dec_year_3_bid', models.FloatField()),
                ('aluminum_dec_year_3_ask', models.FloatField()),
                ('aluminum_stocks_mt', models.FloatField()),
                ('copper_sett', models.FloatField()),
                ('copper_cash_bid', models.FloatField()),
                ('copper_cash_ask', models.FloatField()),
                ('copper_3_months_bid', models.FloatField()),
                ('copper_3_months_ask', models.FloatField()),
                ('copper_stocks_mt', models.FloatField()),
                ('zinc_sett', models.FloatField()),
                ('nickel_sett', models.FloatField()),
                ('aluminum_alloy_sett', models.FloatField()),
                ('exchange_rate_ecb_eur_usd', models.FloatField()),
                ('exchange_rate_ecb_eur_chf', models.FloatField()),
                ('exchange_rate_ecb_eur_gbp', models.FloatField()),
                ('exchange_rate_ecb_eur_aud', models.FloatField()),
                ('exchange_rate_ecb_eur_czk', models.FloatField()),
                ('exchange_rate_ecb_eur_jpy', models.FloatField()),
                ('exchange_rate_ecb_usd_chf', models.FloatField()),
                ('exchange_rate_ecb_gbp_usd', models.FloatField()),
                ('exchange_rate_ecb_usd_czk', models.FloatField()),
                ('exchange_rate_ecb_usd_cny', models.FloatField()),
                ('exchange_rate_fwd_points_eur_usd_1M', models.FloatField()),
                ('exchange_rate_fwd_points_eur_usd_2M', models.FloatField()),
                ('exchange_rate_fwd_points_eur_usd_3M', models.FloatField()),
                ('exchange_rate_fwd_points_usd_chf_1M', models.FloatField()),
                ('exchange_rate_fwd_points_usd_chf_2M', models.FloatField()),
                ('exchange_rate_fwd_points_usd_chf_3M', models.FloatField()),
                ('exchange_rate_LME_eur_usd', models.FloatField()),
                ('exchange_rate_LME_usd_gbp', models.FloatField()),
                ('exchange_rate_LME_usd_jpy', models.FloatField()),
                ('silver_usd_oz', models.FloatField()),
                ('premium_rotterdam_p1020A_duty_paid_usd_t_low', models.FloatField()),
                ('premium_rotterdam_p1020A_duty_paid_usd_t_avg', models.FloatField()),
                ('premium_rotterdam_p1020A_duty_paid_usd_t_high', models.FloatField()),
                ('premium_rotterdam_p1020A_duty_unpaid_usd_t_low', models.FloatField()),
                ('premium_rotterdam_p1020A_duty_unpaid_usd_t_avg', models.FloatField()),
                ('premium_rotterdam_p1020A_duty_unpaid_usd_t_high', models.FloatField()),
                ('premium_european_billet_6063EC_duty_paid_usd_t_low', models.FloatField()),
                ('premium_european_billet_6063EC_duty_paid_usd_t_avg', models.FloatField()),
                ('premium_european_billet_6063EC_duty_paid_usd_t_high', models.FloatField()),
                ('premium_us_midwest_duty_paid_usd_lb_low', models.FloatField()),
                ('premium_us_midwest_duty_paid_usd_lb_avg', models.FloatField()),
                ('premium_us_midwest_duty_paid_usd_lb_high', models.FloatField()),
                ('premium_japan_P1020A_duty_paid_usd_t_low', models.FloatField()),
                ('premium_japan_P1020A_duty_paid_usd_t_avg', models.FloatField()),
                ('premium_japan_P1020A_duty_paid_usd_t_high', models.FloatField()),
                ('stock_exchange_date', models.DateTimeField(unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('microsoft_id', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('last_login', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScenarioGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('data', models.JSONField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SapNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('alu_net_weight', models.FloatField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('sap_number_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.sapnumbergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectUserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
            ],
            options={
                'unique_together': {('user', 'project_group')},
            },
        ),
        migrations.CreateModel(
            name='ProjectUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('project_user_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectusergroup')),
                ('project_user_role', models.ManyToManyField(to='backend.projectuserrole')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectStaffCostGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_date', models.BigIntegerField()),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup')),
                ('project_staff_cost_task', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectstaffcosttask')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
            ],
            options={
                'unique_together': {('project_group', 'user', 'project_staff_cost_task', 'work_date')},
            },
        ),
        migrations.CreateModel(
            name='ProjectStaffCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('hours', models.FloatField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('project_staff_cost_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectstaffcostgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('project_number', models.CharField(max_length=255, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldSaving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saving_date', models.DateTimeField()),
                ('saving_rate', models.FloatField()),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('saving_unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.savingunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceUploadGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateTimeField()),
                ('part_sold_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.partsoldgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('uploaded', models.DateTimeField()),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('part_sold_price_upload_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.partsoldpriceuploadgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('saveable', models.BooleanField(default=False)),
                ('validity_start_date', models.DateTimeField(null=True)),
                ('validity_end_date', models.DateTimeField(null=True)),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('part_sold_price_component_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldpricecomponenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldMaterialPriceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basis', models.FloatField()),
                ('variable', models.BooleanField(default=True)),
                ('use_gross_weight', models.BooleanField(default=False)),
                ('current_saveable', models.BooleanField(default=False)),
                ('basis_saveable', models.BooleanField(default=False)),
                ('validity_start_date', models.DateTimeField(null=True)),
                ('validity_end_date', models.DateTimeField(null=True)),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('part_sold_material_price_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldmaterialpricetype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldCustomerPriceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_date', models.DateTimeField()),
                ('part_sold_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldgroup')),
            ],
            options={
                'unique_together': {('part_sold_group', 'price_date')},
            },
        ),
        migrations.CreateModel(
            name='PartSoldCustomerPriceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('part_sold_customer_price', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldcustomerprice')),
                ('part_sold_price_component_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldpricecomponenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='partsoldcustomerprice',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AddField(
            model_name='partsoldcustomerprice',
            name='part_sold_customer_price_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldcustomerpricegroup'),
        ),
        migrations.CreateModel(
            name='PartSoldContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('part_sold_contract_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.partsoldcontractgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='partsold',
            name='contract_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldcontractgroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.currency'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='customer_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customergroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='part_group',
            field=models.ManyToManyField(blank=True, to='backend.partgroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='part_sold_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldgroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='sap_number',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.sapnumber'),
        ),
        migrations.CreateModel(
            name='PartRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('part_recipient_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partrecipientgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('drawing_date', models.DateTimeField()),
                ('customer_drawing_number', models.CharField(max_length=255)),
                ('customer_drawing_revision', models.CharField(max_length=255)),
                ('customer_part_number', models.CharField(max_length=255)),
                ('customer_part_revision', models.CharField(max_length=255)),
                ('surface_treatment', models.CharField(max_length=255)),
                ('customer_surface_treatment', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
                ('linear_weight', models.FloatField()),
                ('length', models.FloatField()),
                ('tolerance', models.CharField(max_length=255)),
                ('customer_tolerance', models.CharField(max_length=255)),
                ('delivery_temper', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('cross_section_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.crosssectiongroup')),
                ('material_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialgroup')),
                ('material_norm_customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
                ('part_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partgroup')),
                ('part_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.parttype')),
                ('semi_finished_product_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.semifinishedproducttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Norm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('norm_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
                ('norm_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloyTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('remark', models.TextField(default=None, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('material_alloy_treatment_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloytreatmentgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('chemical_symbol', models.CharField(max_length=255)),
                ('internal_name', models.CharField(max_length=255, null=True)),
                ('density', models.FloatField(null=True)),
                ('silicon_min', models.FloatField(null=True)),
                ('silicon_max', models.FloatField(null=True)),
                ('iron_min', models.FloatField(null=True)),
                ('iron_max', models.FloatField(null=True)),
                ('copper_min', models.FloatField(null=True)),
                ('copper_max', models.FloatField(null=True)),
                ('manganese_min', models.FloatField(null=True)),
                ('manganese_max', models.FloatField(null=True)),
                ('magnesium_min', models.FloatField(null=True)),
                ('magnesium_max', models.FloatField(null=True)),
                ('chrome_min', models.FloatField(null=True)),
                ('chrome_max', models.FloatField(null=True)),
                ('zinc_min', models.FloatField(null=True)),
                ('zinc_max', models.FloatField(null=True)),
                ('titanium_min', models.FloatField(null=True)),
                ('titanium_max', models.FloatField(null=True)),
                ('lead_min', models.FloatField(null=True)),
                ('lead_max', models.FloatField(null=True)),
                ('tin_min', models.FloatField(null=True)),
                ('tin_max', models.FloatField(null=True)),
                ('vanadium_min', models.FloatField(null=True)),
                ('vanadium_max', models.FloatField(null=True)),
                ('cadmium_min', models.FloatField(null=True)),
                ('cadmium_max', models.FloatField(null=True)),
                ('nickel_min', models.FloatField(null=True)),
                ('nickel_max', models.FloatField(null=True)),
                ('phosphorus_min', models.FloatField(null=True)),
                ('phosphorus_max', models.FloatField(null=True)),
                ('sulfur_min', models.FloatField(null=True)),
                ('sulfur_max', models.FloatField(null=True)),
                ('carbon_min', models.FloatField(null=True)),
                ('carbon_max', models.FloatField(null=True)),
                ('permissible_additions', models.FloatField(null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('material_alloy_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloygroup')),
                ('norm', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('remark', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('customer_norm', models.ManyToManyField(to='backend.normgroup')),
                ('material_alloy', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloygroup')),
                ('material_alloy_treatment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloytreatmentgroup')),
                ('material_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialgroup')),
                ('material_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerivativeLmc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('region', models.CharField(max_length=255)),
                ('trade_region', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('local_model_line', models.CharField(max_length=255)),
                ('local_program_code', models.CharField(max_length=255)),
                ('local_production_model', models.CharField(max_length=255)),
                ('global_production_model', models.CharField(max_length=255)),
                ('gvw', models.CharField(max_length=255)),
                ('platform', models.CharField(max_length=255)),
                ('production_type', models.CharField(max_length=255)),
                ('vehicle_type', models.CharField(db_column='type', max_length=255)),
                ('regional_size', models.CharField(max_length=255)),
                ('regional_body_type', models.CharField(max_length=255)),
                ('regional_status', models.CharField(max_length=255)),
                ('global_size', models.CharField(max_length=255)),
                ('global_body_type', models.CharField(max_length=255)),
                ('global_status', models.CharField(max_length=255)),
                ('sop_date', models.DateField()),
                ('eop_date', models.DateField()),
                ('next_facelift', models.DateField()),
                ('last_actual', models.DateField()),
                ('design_lead_location', models.CharField(max_length=255)),
                ('design_lead_country', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('derivative_lmc_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativelmcgroup')),
                ('design_lead', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='design_leads', to='backend.customergroup')),
                ('global_make', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='global_makes', to='backend.customergroup')),
                ('local_make', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='local_makes', to='backend.customergroup')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='manufacturers', to='backend.customergroup')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customerplantgroup')),
                ('revision_lmc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.revisionlmc')),
                ('sales_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sales_groups', to='backend.customergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerivativeConstelliumGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerivativeConstelliumDerivativeLmcConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('take_rate', models.FloatField()),
                ('derivative_constellium', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativeconstellium')),
                ('derivative_lmc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativelmcgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='derivativeconstellium',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AddField(
            model_name='derivativeconstellium',
            name='derivative_constellium_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativeconstelliumgroup'),
        ),
        migrations.AddField(
            model_name='derivativeconstellium',
            name='derivative_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativetype'),
        ),
        migrations.AddField(
            model_name='derivativeconstellium',
            name='prediction_accuracy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.predictionaccuracy'),
        ),
        migrations.CreateModel(
            name='CustomerPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('city', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('postcode', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('latitude', models.CharField(max_length=255)),
                ('longitude', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('customer_plant_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customerplantgroup')),
                ('part_recipient_group', models.ManyToManyField(to='backend.partrecipientgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerMaterialCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_range', models.IntegerField()),
                ('month_offset', models.IntegerField()),
                ('share_the_pain_factor', models.FloatField()),
                ('validity_start_date', models.DateTimeField(null=True)),
                ('validity_end_date', models.DateTimeField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.customer')),
                ('part_sold_material_price_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldmaterialpricetype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AddField(
            model_name='customer',
            name='customer_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.customergroup'),
        ),
        migrations.CreateModel(
            name='CrossSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('customer_tolerance', models.CharField(max_length=255)),
                ('extrusion_plant_tooling_number', models.CharField(max_length=255)),
                ('outer_contour_info_dict', models.JSONField(default=None, null=True)),
                ('chambers_info_dict', models.JSONField(default=None, null=True)),
                ('number_of_chambers', models.IntegerField(default=None, null=True)),
                ('dimension_x', models.FloatField(default=None, null=True)),
                ('dimension_y', models.FloatField(default=None, null=True)),
                ('smallest_enclosing_circle_midpoint_x', models.FloatField(default=None, null=True)),
                ('smallest_enclosing_circle_midpoint_y', models.FloatField(default=None, null=True)),
                ('smallest_enclosing_circle_radius', models.FloatField(default=None, null=True)),
                ('smallest_enclosing_circle_scope', models.FloatField(default=None, null=True)),
                ('critical_radii_info_dict', models.JSONField(default=None, null=True)),
                ('number_of_critical_radii', models.IntegerField(default=None, null=True)),
                ('min_radius', models.FloatField(default=None, null=True)),
                ('sharp_edge_info_dict', models.JSONField(default=None, null=True)),
                ('number_of_sharp_edges', models.IntegerField(default=None, null=True)),
                ('center_of_mass_x', models.FloatField(default=None, null=True)),
                ('center_of_mass_y', models.FloatField(default=None, null=True)),
                ('distance_to_center_of_mass_smallest_enclosing_circle', models.FloatField(default=None, null=True)),
                ('flanges_info_dict', models.JSONField(default=None, null=True)),
                ('number_of_flanges', models.IntegerField(default=None, null=True)),
                ('max_flange_length', models.FloatField(default=None, null=True)),
                ('number_of_critical_flanges', models.IntegerField(default=None, null=True)),
                ('webs_info_dict', models.JSONField(default=None, null=True)),
                ('number_of_critical_webs', models.IntegerField(default=None, null=True)),
                ('nodes_info_dict', models.JSONField(default=None, null=True)),
                ('number_of_nodes', models.IntegerField(default=None, null=True)),
                ('number_of_critical_nodes', models.IntegerField(default=None, null=True)),
                ('number_max_webs_on_node', models.IntegerField(default=None, null=True)),
                ('number_critical_web_angles', models.IntegerField(default=None, null=True)),
                ('min_web_angle', models.FloatField(default=None, null=True)),
                ('surface_area', models.FloatField(default=None, null=True)),
                ('area_ratio', models.FloatField(default=None, null=True)),
                ('narrowest_point', models.FloatField(default=None, null=True)),
                ('widest_point', models.FloatField(default=None, null=True)),
                ('thickness_ratio', models.FloatField(default=None, null=True)),
                ('evaluation_info_dict', models.JSONField(default=None, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('cross_section_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.crosssectiongroup')),
                ('cross_section_tolerance_norm', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CacheManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_name', models.CharField(max_length=100)),
                ('group_id', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('data', models.BinaryField()),
            ],
            options={
                'unique_together': {('manager_name', 'group_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CacheIntermediate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intermediate_name', models.CharField(max_length=100)),
                ('identification', models.JSONField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('data', models.BinaryField()),
            ],
            options={
                'unique_together': {('intermediate_name', 'identification', 'start_date', 'end_date')},
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterialStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cumulated_quantity', models.FloatField()),
                ('left_value_product_development', models.FloatField(null=True)),
                ('right_value_product_development', models.FloatField(null=True)),
                ('left_value_process_development', models.FloatField(null=True)),
                ('right_value_process_development', models.FloatField(null=True)),
                ('left_value_logistics', models.FloatField(null=True)),
                ('right_value_logistics', models.FloatField(null=True)),
                ('bill_of_material', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.billofmaterial')),
                ('part_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partgroup')),
                ('part_position', models.ManyToManyField(blank=True, to='backend.partposition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derivative_constellium_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativeconstelliumgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='billofmaterial',
            name='bill_of_material_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.billofmaterialgroup'),
        ),
        migrations.AddField(
            model_name='billofmaterial',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.CreateModel(
            name='PartSoldMaterialWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_weight', models.FloatField()),
                ('net_weight', models.FloatField()),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('part_sold_material_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialtype')),
            ],
            options={
                'unique_together': {('part_sold_material_type', 'part_sold')},
            },
        ),
        migrations.CreateModel(
            name='DerivativeLmcVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('derivative_lmc_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativelmcgroup')),
                ('lmc_revision', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.revisionlmc')),
            ],
            options={
                'unique_together': {('derivative_lmc_group', 'date', 'lmc_revision')},
            },
        ),
    ]
