# Generated by Django 4.2.3 on 2023-07-26 13:09

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CrossSectionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawing_number', models.CharField(max_length=255)),
                ('drawing_revision', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloyTreatmentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('duration', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawing_number', models.CharField(max_length=255)),
                ('drawing_revision', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartRecipientGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('customer_part_number', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('validity_start_date', models.DateTimeField()),
                ('validity_end_date', models.DateTimeField()),
                ('cbd_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldContractGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=255)),
                ('contract_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldCustomerPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('value', models.FloatField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_part_number_sap', models.CharField(max_length=255)),
                ('part_recipient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partrecipientgroup')),
            ],
            options={
                'unique_together': {('part_recipient', 'customer_part_number_sap')},
            },
        ),
        migrations.CreateModel(
            name='PartSoldMaterialPriceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldMaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceComponentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriceUploadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SapNumberGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sap_number', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SavingUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SemiFinishedProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='derivativevolumelmcgroup',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='derivativevolumelmcgroup',
            name='date',
            field=models.DateField(default=datetime.datetime(2023, 7, 26, 13, 9, 5, 890019)),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customerplant',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customer'),
        ),
        migrations.AlterField(
            model_name='derivativeconstellium',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='derivativeconstellium',
            name='derivative_constellium_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativeconstelliumgroup'),
        ),
        migrations.AlterField(
            model_name='derivativeconstellium',
            name='derivative_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativetype'),
        ),
        migrations.AlterField(
            model_name='derivativeconstellium',
            name='prediction_accuracy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.predictionaccuracy'),
        ),
        migrations.AlterField(
            model_name='derivativeconstelliumgroup',
            name='project_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='derivative_lmc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativelmcgroup'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='design_lead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='design_leads', to='backend.customer'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='global_make',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='global_makes', to='backend.customer'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='local_make',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='local_makes', to='backend.customer'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='manufacturers', to='backend.customer'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customerplant'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='revision_lmc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.revisionlmc'),
        ),
        migrations.AlterField(
            model_name='derivativelmc',
            name='sales_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sales_groups', to='backend.customer'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmc',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmc',
            name='derivative_lmc_volume_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativevolumelmcgroup'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmc',
            name='revision_lmc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.revisionlmc'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmcderivativeconstelliumconnection',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmcderivativeconstelliumconnection',
            name='derivative_volume_lmc_derivative_constellium_connection_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativevolumelmcderivativeconstelliumconnectiongroup'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmcderivativeconstelliumconnectiongroup',
            name='derivative_constellium_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativeconstelliumgroup'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmcderivativeconstelliumconnectiongroup',
            name='derivative_lmc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativelmcgroup'),
        ),
        migrations.AlterField(
            model_name='derivativevolumelmcgroup',
            name='derivative_lmc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.derivativelmcgroup'),
        ),
        migrations.AlterField(
            model_name='project',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='project',
            name='project_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup'),
        ),
        migrations.AlterField(
            model_name='projectstaffcost',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='projectstaffcost',
            name='project_staff_cost_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectstaffcostgroup'),
        ),
        migrations.AlterField(
            model_name='projectstaffcostgroup',
            name='project_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup'),
        ),
        migrations.AlterField(
            model_name='projectstaffcostgroup',
            name='project_staff_cost_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectstaffcosttask'),
        ),
        migrations.AlterField(
            model_name='projectstaffcostgroup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='projectuser',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='projectuser',
            name='project_user_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectusergroup'),
        ),
        migrations.AlterField(
            model_name='projectusergroup',
            name='project_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.projectgroup'),
        ),
        migrations.AlterField(
            model_name='projectusergroup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='scenario',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterField(
            model_name='scenariogroup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AlterUniqueTogether(
            name='derivativevolumelmcgroup',
            unique_together={('derivative_lmc_group', 'date')},
        ),
        migrations.CreateModel(
            name='SapNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('alu_net_weight', models.FloatField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('sap_number_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.sapnumbergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldSaving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saving_date', models.DateTimeField()),
                ('saving_rate', models.FloatField()),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('saving_unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.savingunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceUploadGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateTimeField()),
                ('part_sold_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.partsoldgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('uploaded', models.DateTimeField()),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('part_sold_price_upload_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.partsoldpriceuploadgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldPriceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('saveable', models.BooleanField(default=False)),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('part_sold_price_component_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldpricecomponenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartSoldCustomerPriceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_date', models.DateTimeField()),
                ('part_sold_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldgroup')),
            ],
            options={
                'unique_together': {('part_sold_group', 'price_date')},
            },
        ),
        migrations.CreateModel(
            name='PartSoldCustomerPriceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_sold_customer_price', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldcustomerprice')),
                ('part_sold_price_component_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldpricecomponenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='partsoldcustomerprice',
            name='part_sold_customer_price_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldcustomerpricegroup'),
        ),
        migrations.CreateModel(
            name='PartSoldContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('part_sold_contract_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.partsoldcontractgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='partsold',
            name='contract_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldcontractgroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.currency'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='customer_plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.customerplant'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='part_group',
            field=models.ManyToManyField(to='backend.partgroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='part_sold_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldgroup'),
        ),
        migrations.AddField(
            model_name='partsold',
            name='sap_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.sapnumber'),
        ),
        migrations.CreateModel(
            name='PartRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('part_recipient_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partrecipientgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('drawing_date', models.DateTimeField()),
                ('customer_drawing_number', models.CharField(max_length=255)),
                ('customer_drawing_revision', models.CharField(max_length=255)),
                ('customer_part_number', models.CharField(max_length=255)),
                ('customer_part_revision', models.CharField(max_length=255)),
                ('surface_treatment', models.CharField(max_length=255)),
                ('customer_surface_treatment', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
                ('linear_weight', models.FloatField()),
                ('length', models.FloatField()),
                ('tolerance', models.CharField(max_length=255)),
                ('customer_tolerance', models.CharField(max_length=255)),
                ('delivery_temper', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('cross_section_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.crosssectiongroup')),
                ('material_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialgroup')),
                ('material_norm_customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
                ('part_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partgroup')),
                ('part_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.parttype')),
                ('semi_finished_product_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.semifinishedproducttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Norm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('norm_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
                ('norm_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloyTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('remark', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('material_alloy_treatment_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloytreatmentgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialAlloy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('chemical_symbol', models.CharField(max_length=255)),
                ('internal_name', models.CharField(max_length=255, null=True)),
                ('density', models.FloatField(null=True)),
                ('silicon_min', models.FloatField(null=True)),
                ('silicon_max', models.FloatField(null=True)),
                ('iron_min', models.FloatField(null=True)),
                ('iron_max', models.FloatField(null=True)),
                ('copper_min', models.FloatField(null=True)),
                ('copper_max', models.FloatField(null=True)),
                ('manganese_min', models.FloatField(null=True)),
                ('manganese_max', models.FloatField(null=True)),
                ('magnesium_min', models.FloatField(null=True)),
                ('magnesium_max', models.FloatField(null=True)),
                ('chrome_min', models.FloatField(null=True)),
                ('chrome_max', models.FloatField(null=True)),
                ('zinc_min', models.FloatField(null=True)),
                ('zinc_max', models.FloatField(null=True)),
                ('titanium_min', models.FloatField(null=True)),
                ('titanium_max', models.FloatField(null=True)),
                ('lead_min', models.FloatField(null=True)),
                ('lead_max', models.FloatField(null=True)),
                ('tin_min', models.FloatField(null=True)),
                ('tin_max', models.FloatField(null=True)),
                ('vanadium_min', models.FloatField(null=True)),
                ('vanadium_max', models.FloatField(null=True)),
                ('cadmium_min', models.FloatField(null=True)),
                ('cadmium_max', models.FloatField(null=True)),
                ('nickel_min', models.FloatField(null=True)),
                ('nickel_max', models.FloatField(null=True)),
                ('phosphorus_min', models.FloatField(null=True)),
                ('phosphorus_max', models.FloatField(null=True)),
                ('sulfur_min', models.FloatField(null=True)),
                ('sulfur_max', models.FloatField(null=True)),
                ('carbon_min', models.FloatField(null=True)),
                ('carbon_max', models.FloatField(null=True)),
                ('permissible_additions', models.FloatField(null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('material_alloy_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloygroup')),
                ('norm', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('remark', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('customer_norm', models.ManyToManyField(to='backend.normgroup')),
                ('material_alloy', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloygroup')),
                ('material_alloy_treatment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialalloytreatmentgroup')),
                ('material_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialgroup')),
                ('material_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.materialtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrossSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('customer_tolerance', models.CharField(max_length=255)),
                ('extrusion_plant_tooling_number', models.CharField(max_length=255)),
                ('outer_contour_info_dict', models.JSONField()),
                ('chambers_info_dict', models.JSONField()),
                ('number_of_chambers', models.IntegerField()),
                ('dimension_x', models.FloatField()),
                ('dimension_y', models.FloatField()),
                ('smallest_enclosing_circle_midpoint_x', models.FloatField()),
                ('smallest_enclosing_circle_midpoint_y', models.FloatField()),
                ('smallest_enclosing_circle_radius', models.FloatField()),
                ('smallest_enclosing_circle_scope', models.FloatField()),
                ('critical_radii_info_dict', models.JSONField()),
                ('number_of_critical_radii', models.IntegerField()),
                ('min_radius', models.FloatField()),
                ('sharp_edge_info_dict', models.JSONField()),
                ('number_of_sharp_edges', models.IntegerField()),
                ('center_of_mass_x', models.FloatField()),
                ('center_of_mass_y', models.FloatField()),
                ('distance_to_center_of_mass_smallest_enclosing_circle', models.FloatField()),
                ('flanges_info_dict', models.JSONField()),
                ('number_of_flanges', models.IntegerField()),
                ('max_flange_length', models.FloatField()),
                ('number_of_critical_flanges', models.IntegerField()),
                ('webs_info_dict', models.JSONField()),
                ('number_of_critical_webs', models.IntegerField()),
                ('nodes_info_dict', models.JSONField()),
                ('number_of_nodes', models.IntegerField()),
                ('number_of_critical_nodes', models.IntegerField()),
                ('number_max_webs_on_node', models.IntegerField()),
                ('number_critical_web_angles', models.IntegerField()),
                ('min_web_angle', models.FloatField()),
                ('surface_area', models.FloatField()),
                ('area_ratio', models.FloatField()),
                ('narrowest_point', models.FloatField()),
                ('widest_point', models.FloatField()),
                ('thickness_ratio', models.FloatField()),
                ('evaluation_info_dict', models.JSONField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
                ('cross_section_tolerance_norm', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.normgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='derivativevolumelmcgroup',
            name='month',
        ),
        migrations.RemoveField(
            model_name='derivativevolumelmcgroup',
            name='year',
        ),
        migrations.CreateModel(
            name='PartSoldMaterialWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_weight', models.FloatField()),
                ('net_weight', models.FloatField()),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('part_sold_material_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldmaterialtype')),
            ],
            options={
                'unique_together': {('part_sold_material_type', 'part_sold')},
            },
        ),
        migrations.CreateModel(
            name='PartSoldMaterialPriceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basis', models.FloatField()),
                ('variable', models.BooleanField(default=True)),
                ('use_gross_weight', models.BooleanField(default=False)),
                ('saveable', models.BooleanField(default=False)),
                ('part_sold', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsold')),
                ('part_sold_material_price_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.partsoldmaterialpricetype')),
            ],
            options={
                'unique_together': {('part_sold_material_price_type', 'part_sold')},
            },
        ),
    ]
